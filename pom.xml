<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
   
   <groupId>org.example</groupId>
   <artifactId>sonar-integration-tests</artifactId>
   <version>1.1.0</version>
   <packaging>pom</packaging>
   
   <name>Sonar Integration Tests</name>
   <description>Example of how integration tests executed in a application server can be analyzed by Jacoco/Sonar.</description>
   <inceptionYear>2018</inceptionYear>
   <licenses>
      <license>
         <name>GNU General Public License (GPL) version 3.0</name>
         <url>https://www.gnu.org/licenses/gpl-3.0</url>
      </license>
   </licenses>
   
   <modules>
      <module>module-common</module>
      <module>module-backend/rest-impl</module>
      <module>module-backend/rest-war</module>
      <module>module-frontend/rest-impl</module>
      <module>module-frontend/rest-war</module>
   </modules>
   
   <developers>
      <developer>
         <id>btrinnes</id>
         <name>Bernhard Trinnes</name>
         <email>43109650+BernyTrinnes@users.noreply.github.com</email>
         <roles>
            <role>Developer</role>
            <role>Project Administrator</role>
         </roles>
         <timezone>Europe/Berlin</timezone>
      </developer>
   </developers>
   <scm>
      <url>https://github.com/BernyTrinnes/sonar-integration-test</url>
      <tag>HEAD</tag>
      <connection>https://github.com/BernyTrinnes/sonar-integration-test.git</connection>
      <developerConnection>git@github.com:BernyTrinnes/sonar-integration-test.git</developerConnection>
   </scm>
   <issueManagement>
      <system>GitHub</system>
      <url>https://github.com/BernyTrinnes/sonar-integration-test/issues</url>
   </issueManagement>
   
   <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
      
      <level.source>11</level.source>
      <level.target>${level.source}</level.target>
      
      <version.dep.lombok>1.18.22</version.dep.lombok>
      <version.dep.commons.lang>3.12.0</version.dep.commons.lang>
      <version.dep.jersey>2.35</version.dep.jersey>
      <version.dep.junit>5.8.1</version.dep.junit>
      <version.dep.assertj>3.21.0</version.dep.assertj>
      <version.dep.mockito>4.1.0</version.dep.mockito>
      
      <version.plugin.compiler>3.8.1</version.plugin.compiler>
      <version.plugin.failsafe>3.0.0-M5</version.plugin.failsafe>
      <version.plugin.surefire>3.0.0-M5</version.plugin.surefire>
      <version.plugin.jar>3.2.0</version.plugin.jar>
      <version.plugin.war>3.3.2</version.plugin.war>
      <version.plugin.jacoco>0.8.7</version.plugin.jacoco>
      <version.plugin.sonar>3.9.1.2184</version.plugin.sonar>
      
      <sonar.base.report>target/jacoco.xml</sonar.base.report>
      <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
      <sonar.base.exclusions>
         **/pom.xml, **/package-info.java
      </sonar.base.exclusions>
      <sonar.exclusions>${sonar.base.exclusions}</sonar.exclusions>
      <sonar.coverage.jacoco.xmlReportPaths>${sonar.base.report}</sonar.coverage.jacoco.xmlReportPaths>
   </properties>
   
   <dependencyManagement>
      <dependencies>
         <dependency>
            <groupId>org.example.sit</groupId>
            <artifactId>module-common</artifactId>
            <version>${project.version}</version>
         </dependency>
         <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${version.dep.commons.lang}</version>
         </dependency>
         <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
            <version>${version.dep.jersey}</version>
         </dependency>
         <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
            <version>${version.dep.jersey}</version>
         </dependency>
         <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${version.dep.jersey}</version>
         </dependency>
         
         <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${version.dep.lombok}</version>
            <scope>provided</scope>
         </dependency>
         
         <dependency>
            <groupId>org.junit</groupId>
            <artifactId>junit-bom</artifactId>
            <version>${version.dep.junit}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         
         <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${version.dep.assertj}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${version.dep.mockito}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${version.dep.mockito}</version>
            <scope>test</scope>
         </dependency>
         <dependency>
            <groupId>org.example.sit</groupId>
            <artifactId>module-common</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
         </dependency>
      </dependencies>
   </dependencyManagement>
   
   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${version.plugin.compiler}</version>
            <configuration>
               <source>${level.source}</source>
               <target>${level.target}</target>
               <annotationProcessorPaths>
                  <path>
                     <groupId>org.projectlombok</groupId>
                     <artifactId>lombok</artifactId>
                     <version>${version.dep.lombok}</version>
                  </path>
               </annotationProcessorPaths>
            </configuration>
         </plugin>
         
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <version>${version.plugin.war}</version>
            <configuration>
               <failOnMissingWebXml>false</failOnMissingWebXml>
            </configuration>
         </plugin>
         
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>${version.plugin.jar}</version>
         </plugin>
         
         <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${version.plugin.jacoco}</version>
            <executions>
               <execution>
                  <id>agent-for-ut</id>
                  <goals>
                     <goal>prepare-agent</goal>
                  </goals>
                  <configuration>
                     <append>true</append>
                     <destFile>${report.jacoco.ut}</destFile>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         
         <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${version.plugin.surefire}</version>
            <configuration>
               <skip>false</skip>
               <includes>
                  <include>**/Test*.java</include>
                  <include>**/*Test.java</include>
                  <include>**/*Tests.java</include>
                  <include>**/*TestCase.java</include>
               </includes>
               <excludes>
                  <exclude>**/IT*.java</exclude>
                  <exclude>**/*IT.java</exclude>
                  <exclude>**/*ITCase.java</exclude>
               </excludes>
            </configuration>
         </plugin>
         
         <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${version.plugin.failsafe}</version>
            <executions>
               <execution>
                  <goals>
                     <goal>integration-test</goal>
                     <goal>verify</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <skip>true</skip>
               <includes>
                  <include>**/IT*.java</include>
                  <include>**/*IT.java</include>
                  <include>**/*ITCase.java</include>
               </includes>
            </configuration>
         </plugin>
         
         <plugin>
            <groupId>org.sonarsource.scanner.maven</groupId>
            <artifactId>sonar-maven-plugin</artifactId>
            <version>${version.plugin.sonar}</version>
         </plugin>
      </plugins>
   </build>
   
   <profiles>
      <profile>
         <id>integration-tests</id>
         
         <modules>
            <module>module-integration-tests</module>
         </modules>
         
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-jar-plugin</artifactId>
                  <configuration>
                     <!--
                        This module doesn't have own source classes, but for the tests to be
                        executed the packaging needs to be jar, war or ear.
                        Added the creation of a jar which contains the test classes to stop maven
                        complaining about empty jar files.
                      -->
                     <skipIfEmpty>true</skipIfEmpty>
                  </configuration>
                  <executions>
                     <execution>
                        <goals>
                           <goal>test-jar</goal>
                        </goals>
                        <phase>package</phase>
                     </execution>
                  </executions>
               </plugin>
               
               <plugin>
                  <groupId>org.jacoco</groupId>
                  <artifactId>jacoco-maven-plugin</artifactId>
                  <version>${version.plugin.jacoco}</version>
                  <executions>
                     <execution>
                        <id>agent-for-ut</id>
                        <goals>
                           <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                           <skip>true</skip>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
               
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration>
                     <skip>true</skip>
                  </configuration>
               </plugin>
               
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-failsafe-plugin</artifactId>
                  <configuration>
                     <skip>false</skip>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>
      
      <profile>
         <id>coverage</id>
         
         <modules>
            <module>module-integration-tests</module>
            <module>coverage</module>
         </modules>
         
         <build>
            <plugins>
               <plugin>
                  <groupId>org.jacoco</groupId>
                  <artifactId>jacoco-maven-plugin</artifactId>
                  <version>${version.plugin.jacoco}</version>
                  <executions>
                     <execution>
                        <id>agent-for-ut</id>
                        <goals>
                           <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                           <skip>true</skip>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
               
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration>
                     <skip>true</skip>
                  </configuration>
               </plugin>
               
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-failsafe-plugin</artifactId>
                  <configuration>
                     <skip>true</skip>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>
</project>
